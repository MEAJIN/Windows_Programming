#define A

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

#if A

namespace ConsoleApplication22
{
    class Student
    {
        private string Name;    //이름
        private string S_num;   //학번
        private int Grade;      //학년
        private int Mid_score = 0;   //중간 점수
        private int Final_score = 0;   //기말 점수
        private double sum = 0;   //점수 합계
        private double avg = 0;   //평균 점수


        //1-1 입력받은 값으로 초기화하는 생성자
        public Student(String name, String stu_num, int grade)
        {
            Name = name;
            S_num = stu_num;
            Grade = grade;
        }


        //1-2 합계를 구하는 메소드
        public double Sum()
        {
            sum = Mid_score + Final_score;
            return sum;
        }

        //1-2 평균을 구하는 메소드
        public double Average()
        {
            avg = sum / 2;
            return avg;
        }

        //중간 기말 점수의 프로퍼티
        public int Mid_Score
        {
            get { return Mid_score; }
            set { Mid_score = value; }
        }

        public int Final_Score
        {
            get { return Final_score; }
            set { Final_score = value; }
        }

        //1-2 중간점수와 기말점수 할당 메소드 & 합계 평균 메소드 실행
        public void setScore(int mid, int final)
        {
            Mid_score = mid;
            Final_score = final;
            Sum();
            Average();
        }

        //전체 점수 출력 메소드
        public void print()
        {
            Console.WriteLine("이름 : " + Name + ", 학번 : " + S_num + ", 학년" + Grade);
            Console.WriteLine("총점 : " + sum + ", 평균 :" + avg);
        }

    }

    class Program
    {
        static void Main(string[] args)
        {
            string[] str;

            Console.WriteLine(">>> 이름 학번 학년 입력");
            str = Console.ReadLine().Split(' ');


            Student s = new Student(str[0], str[1], Convert.ToInt32(str[2]));

            Console.WriteLine(">>> 중간, 기말 점수 입력");
            str = Console.ReadLine().Split(' ');

            s.setScore(Convert.ToInt32(str[0]), Convert.ToInt32(str[1]));

            s.print();

        }
    }
}

#elif B

namespace ConsoleApplication22
{
    class Student
    {
        private string Name;    //이름
        private string S_num;   //학번
        private int Grade;      //학년
        private int Mid_score = 0;   //중간 점수
        private int Final_score = 0;   //기말 점수
        private double sum = 0;   //점수 합계
        private double avg = 0;   //평균 점수


        //2-1 디폴트 생성자
        public Student()
        {
            Name = "";
            S_num = "";
            Grade = 0;
        }

        public Student(String name, String stu_num, int grade)
        {
            Name = name;
            S_num = stu_num;
            Grade = grade;
        }

        //2-2 소멸자
        ~Student()
        {
            Console.WriteLine("Destructor.....");
        }


        public double getSum(){
            sum = Mid_score + Final_score;
            return sum;
        }

        public double getAverage()
        {
            avg = sum / 2;
            return avg;
        }

        //변수의 프로퍼티
        public int Mid_Score
        {
            get { return Mid_score;}
            set { Mid_score = value;}
        }

        public int Final_Score
        {
            get { return Final_score; }
            set { Final_score = value; }
        }

        public double Sum
        {
            get { return sum; }
            set { sum = value; }
        }

        public double Avg
        {
            get { return avg; }
            set { avg = value; }
        }

        public void setScore(int mid, int final)
        {
            Mid_score = mid;
            Final_score = final;
            getSum();
            getAverage();
        }

        //전체 점수 출력 메소드
        public void print()
        {
            Console.WriteLine("이름 : " + Name + ", 학번 : " + S_num + ", 학년 : " + Grade);
            Console.WriteLine("총점 : " + sum + ", 평균 :" + avg);
        }

    }

    class Program
    {
        static void Main(string[] args)
        {
            string[] str;
            int student_num;

            double mid = 0;
            double final = 0;

            Console.Write("학생의 명 수를 입력하세요 : ");
            student_num = Convert.ToInt32(Console.ReadLine());

                       
            Student[] s = new Student[student_num];

            for (int i = 0; i < student_num; i++)
            {
                Console.WriteLine(">>> 이름 학번 학년 입력");
                str = Console.ReadLine().Split(' ');

                s[i] = new Student(str[0], str[1], Convert.ToInt32(str[2]));

                Console.WriteLine(">>> 중간, 기말 점수 입력");
                str = Console.ReadLine().Split(' ');

                s[i].setScore(Convert.ToInt32(str[0]), Convert.ToInt32(str[1]));

                s[i].print();

                mid += s[i].Mid_Score;
                final += s[i].Final_Score;
            }

            mid /= 3;
            final /= 3;

            Console.WriteLine("총 학생수는 "+student_num+" 명이며, 평균 중간 점수는 "+mid+"점, 평균 기말 점수는 "+final+"점 입니다");
        }
    }
}

#elif C

namespace ConsoleApplication22
{
    class Calc
    {
        private double op1, op2;
        private string op;
        //3-2 사직연산 결과 저장 필드
        private double result;

        //3-1 생성자
        public Calc(double op1, string op, double op2)
        {
            this.op1 = op1;
            this.op = op;
            this.op2 = op2;
            result = 0;
        }

        //3-2 사칙연산 구현 메소드
        public void Sum()
        {
            result = op1 + op2;
        }

        public void Sub()
        {
            result = op1 - op2;
        }

        public void Mul()
        {
            result = op1 * op2;
        }

        public void Div()
        {
            result = op1 / op2;
        }

        //3-3 연산자에 따라 메소드 호출, 결과 출력
        public void Result()
        {
            switch (op)
            {
                case "+" :
                    this.Sum();
                    break;
                case "-" :
                    this.Sub();
                    break;
                case "*" :
                    this.Mul();
                    break;
                case "/" :
                    this.Div();
                    break;
            }
            Console.WriteLine(">> 답 = " + result);
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            //3-4 메인 작성
            string str;
            string[] s;

            Console.Write("수식을 입력하세요 : ");
            s = Console.ReadLine().Split(' ');
            Calc ex = new Calc(Int32.Parse(s[0]), s[1], Int32.Parse(s[2]));

            ex.Result();
        }
    }
}

#elif D

namespace ConsoleApplication22
{
    class Parkinglot
    {
        static readonly int SIZE = 10;
        private int[] carNum;
        private string[] carModel;
        private int[] carIn;
        private int[] carOut;

        public Parkinglot()
        {
            carNum = new int[SIZE];
            carModel = new string[SIZE];
            carIn = new int[SIZE];
            carOut = new int[SIZE];
        }

        private int findEmpty(int num)
        {
            int i;
            for (i = 0; i < SIZE; i++)
            {
                if (carNum[i] == num)
                {
                    return i;
                }
            }
            return -1;
        }

        //4-1 사용자에게 입력받은 정보로 주차장 객체에 할당하는 car_in
        public void CarIn(int num, string model, int in_time)
        {
            int empty = findEmpty(0);

            if (empty == -1)
            {
                Console.WriteLine("빈 자리가 없습니다.");
                return;
            }

            carNum[empty] = num;
            carModel[empty] = model;
            carIn[empty] = in_time;
        }

        //4-2 차량 객체를 찾아 나간 시간을 기록, 요금 계산 car_out
        public int CarOut(int num, int out_time)
        {
            int find = findEmpty(num);

            if (find == -1)
            {
                Console.WriteLine(num + "차량은 주차 기록이 없습니다.");
                return 0;
            }
            carOut[find] = out_time;
            int fee = (carOut[find] - carIn[find]) * 3;

            carNum[find] = 0;
            carModel[find] = null;
            carIn[find] = 0;
            carOut[find] = 0;

            return fee;
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            Parkinglot lot = new Parkinglot();
            int state;
            string[] s = new string[3];

            do
            {
                Console.Write("enter number(0 : car in, 1 : car out) : ");
                state = Int32.Parse(Console.ReadLine());

                if (state == 0)
                {
                    Console.Write("enter car information(5885,k5,1) : ");
                    s = Console.ReadLine().Split(',');
                    lot.CarIn(Int32.Parse(s[0]), s[1], Int32.Parse(s[2]));
                }
                else if (state == 1)
                {
                    Console.Write("enter car number : ");
                    s[0] = Console.ReadLine();

                    Console.Write("enter exit time : ");
                    s[1] = Console.ReadLine();
                    Console.WriteLine("car has been out. parking fee = " + lot.CarOut(Int32.Parse(s[0]), Int32.Parse(s[1])) + "$");
                }
                Console.WriteLine();
            } while (state == 0 || state == 1);
            //4-3 0,1 이외의 값이 들어오면 exit
        }
    }
}

#endif