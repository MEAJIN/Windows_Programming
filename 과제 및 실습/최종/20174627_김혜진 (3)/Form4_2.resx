<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox8.Text" xml:space="preserve">
    <value>취소규정
공통적용사항
예약취소는 마이페이지를 통해 가능합니다.

입실일 당일은 취소수수료가 100% 발생하여 취소가 불가능합니다.

취소수수료가 100%인 경우, 마이페이지 상에서 취소가 불가능하오니 숙박 고객센터로 문의하시기 바랍니다.

취소수수료 규정은 예약일(결제일)과 관계없이 입실일 기준으로 산정됩니다. 취소수수료는 할인(쿠폰) 적용 전 객실 판매금액을 기준으로 책정됩니다.

취소 후에는 마이페이지에서 취소된 사항을 확인하실 수 있습니다.

예약취소는 반드시 인터파크투어를 통해서만 처리 가능합니다. 불가피한 사정으로 예약하신 호텔/리조트/펜션에 직접 취소를 하신 경우에는 해당 호텔/리조트/펜션의 예약변경 및 취소에 대한 확인 자료를 당사로 제출해주셔야 합니다. 당사는 예약 대행사로써 예약상의 문제 이외의 상품 자체의 하자로 인한 문제는 해당 호텔/리조트/펜션에 귀속됨을 알려드립니다.

당일 노쇼(No Show)란 예약된 숙소를 이용하지 않는 경우로 당일 취소분과 동일하게 적용해 숙박요금이 100% 정상 청구됩니다.

취소가능일은 인터파크투어 영업일 (일요일/공휴일 제외) 기준으로 산정되며, 취소마감시간 [평일17:00 / 토요일10:00] 이후 취소 시에는 다음날 취소된 것으로 인정됩니다.

상품별, 숙소별 별도 취소 규정이 적용되니 예약진행 시 이용동의란의 취소가능일을 반드시 확인해 주시기 바랍니다.

포인트 합산 결제한 경우 : 패널티는 포인트에서 선차감되어 환불되며, 패널티 금액이 포인트 사용 금액보다 높을 경우 잔여 패널티 금액은 결제하신 결제수단(신용카드, 무통장 등)에서 차감 후 환불됩니다. 단, 패널티 금액이 무통장 혹은 신용카드 결제금액보다 높을 경우에는 고객센터로 문의하시기 바랍니다.

미성년자의 숙박업소 출입은 가능하나 청소년보호법 제30조 제8호에 의거 이성혼숙은 제한되며, 제한으로 인한 환불은 숙소별 취소규정에 따라 적용됩니다.

환불절차 안내
신용카드/ 카카오페이로 결제한 경우

- 일반적으로 당사의 취소 처리 후, 4~6일 후에 카드사의 취소가 확인됩니다. 그러나 취소한 시점과 카드사의 환불기준에 따라서 취소된 금액의 환급방법/환급일은 다소 차이가 있을 수 있습니다.

- 직불(체크)카드는 예매 취소 즉시 환불처리 되지만,  상황에 따라 다소 늦어질 수 있습니다. 자세한 사항은 결제한 카드사로 문의 하시기 바랍니다.

Onepay(나의 결제)로 결제한 경우

- Onepay 신용카드로 결제한 경우, 일반적으로 당사의 취소 처리 후, 4~6일 후에 카드사의 취소가 확인됩니다. 그러나 취소한 시점과 카드사의 환불기준에 따라서 취소된 금액의 환급방법/환급일은 다소 차이가 있을 수 있습니다.

- Onepay 체크카드는 취소 즉시 환불처리 되지만(영업일 기준), 상황에 따라 다소 늦어질 수 있습니다. 자세한 사항은 결제한 카드사로 문의 하시기 바랍니다.

- Onepay 계좌로 결제한 경우, 일반적으로 즉시 환불처리 되지만, 상황에 따라 다소 늦어질 수 있습니다. 자세한 사항은 인터파크로 문의 주십시오.

네이버페이로 결제한 경우

- 신용카드/체크카드 : 취소 완료 후 3~5 영업일 이후 환불(승인/매입 구분 불가) 됩니다.

- 계좌이체 : 취소 완료 즉시 환불(단, 은행 정기점검 시간 등에는 환불 실패) 됩니다.

- 포인트 : 취소 완료 즉시 환불 됩니다.

- 네이버페이 포인트 환불 여부와 적립 상세 내용은 네이버 사이트의 네이버페이에서 확인 가능합니다.

무통장입금으로 결제한 경우

- 일반적으로 환불 접수 후 5~7일 이내에 처리됩니다. (영업일 기준) 무통장입금으로 결제가 완료된 경우 취소 시 환불 받으실 계좌번호를 입력하시면 계좌로 환불금액을 입금해 드립니다.

- 환불계좌는 반드시 예약자(주문자) 명의로 된 통장이어야 환불 접수 가능합니다.

포인트 합산 결제한 경우

- 패널티는 포인트에서 선차감되어 환불되며, 패널티 금액이 포인트 사용 금액보다 높을 경우 잔여 패널티 금액은 결제하신 결제수단(신용카드, 무통장 등)에서 차감 후 환불됩니다. 단, 패널티 금액이 무통장 혹은 신용카드 결제금액보다 높을 경우에는 고객센터로 문의 하시기 바랍니다.

영수증발급 안내
인터파크투어는 숙박 상품의 판매대행처로 소득세법과 부가가치세법에 따라 세금계산서 발행이 어렵습니다.

신용카드로 결제하시면 신용카드매출전표(마이페이지)를 발급 받을 수 있으며, 무통장으로 결제하시면 현금영수증(숙박 고객센터 문의)을 발급 받을 수 있습니다.

네이버페이 관련 전표는 네이버 사이트의 네이버페이 주문내역에서 확인 가능합니다.

고객센터 안내
TEL : (02) 3479-4240 (평일 : 09:00~17:00 / 토&amp;공휴일 : 09:00~16:00 / 12:00~13:00 점심시간 /  일요일 휴무 )

인터파크투어는 숙박 상품의 판매대행처로 소득세법과 부가가치세법에 따라 세금계산서 발행이 불가합니다.</value>
  </data>
</root>